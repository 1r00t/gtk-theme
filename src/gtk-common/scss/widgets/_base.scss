// This file is part of the Pop!_GTK Theme.
// See gtk.scss for full license and copyright information
/* 
 * widgets/_base.scss - Base/fallback states for GTK Widgets and Mixins
 *
 * File credits: Ian Santopietro <isantop@gmail.com>
 */
 

 
.background {
    color: $fg_color;
    background-color: $bg_color;
}

* {

  background-clip: padding-box;
  -GtkTextView-error-underline-color: $error_color;
  -GtkIMHtml-hyperlink-color: $color_theme_2;
  -GtkHTML-link-color: $color_theme_2;
  //-gtk-icon-palette: needs-attention @attention_color, success @success_color, warning @warning_color, error @error_color; 
   
  &:selected {
    color: $selected_fg_color;
    background-color: $selected_bg_color;
  }
  
  &:disabled {
    color: to600($fg_color);
    -gtk-icon-effect: dim;
  }
  
  &:hover {
    -gtk-icon-effect: none;
  }
  
  //&:backdrop {
  //  color: to600($fg_color);
  //}
}

.gtkstyle-fallback {
  color: $fg_color;
  background-color: $bg_color;
}

.link {
  color: $color_theme_2;
}
.visited {
  color: darken($color_theme_2, 20%);
}


image,
label,
box,
grid {
  background-color: transparent;
  
  &:disabled {
    background-color: transparent;
  }
}

%linked-horizontal {
  border-radius: 0;
  margin: $mini_padding 0;
  

  &:first-child,
  &:first-child * {
    border-radius: $corner_radius 0 0 $corner_radius;
    
    &:dir-rtl {
      border-radius: 0 $corner_radius $corner_radius 0;
    }
  }
  
  &:last-child,
  &:last-child * {
    border-radius: 0 $corner_radius $corner_radius 0;
    
    &:dir-rtl {
      border-radius: 0 $corner_radius 0 0 $corner_radius;
    }
  }
  
  &:only-child {
    border-radius: $corner_radius;
  }
}
  
%linked-vertical{
  border-radius: 0;
  margin: 0 $mini_padding;
  
  &:first-child {
    border-radius: $corner_radius $corner_radius 0 0;
  }
  
  &:last-child {
    border-radius: 0 0 $corner_radius $corner_radius;

  }
}

@mixin underline($type, $focus_color: $color_theme_2, $text_color: $fg_color) {

  @if $type == normal {
    transition: all $standard_duration ease;
    border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                  to400($fg_color) 100%,
                                  transparent 0%)
                                  0 0 2 / 0 0 2px;;
    border-radius: $corner_radius $corner_radius 0 0;
    padding: $tiny_padding_em;
  }

  @if $type == focus {
    border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                  $focus_color 100%,
                                  transparent 0%)
                                  0 0 2 / 0 0 2px;
    
    &:backdrop {
      border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                    to400($focus_color) 100%,
                                    transparent 0%)
                                    0 0 2 / 0 0 2px;
    }
  }

  @if $type == disabled {
    border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                  to200($fg_color) 100%,
                                  transparent 0%)
                                  0 0 2 / 0 0 2px;;
  }

  @if $type == flat-normal {
    border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                  to400($fg_color) 0%,
                                  transparent 0%)
                                  0 0 0 / 0 0 0px;
    box-shadow: none;
  }

  @if $type == flat-focus {
    border-image: radial-gradient(circle closest-corner at center calc(100% - 1px),
                                  $color_theme_2 100%,
                                  transparent 0%)
                                  0 0 2 / 0 0 2px;
    box-shadow: none;
  }
}

%flat {
  background-color: transparent;
  box-shadow: none;
  
  &:hover {
    background-color: to100($fg_color);  
    box-shadow: none;
  }
  
  &:active {
    background-color: to200($fg_color);
    box-shadow: none;
  }
  
  &:checked {
    background-color: transparent;
    @include underline(focus);
    
    &:backdrop {
      background-color: transparent;
    }
  }
}